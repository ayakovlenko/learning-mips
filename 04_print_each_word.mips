.data

  str: .asciiz "What I cannot create, I do not understand."

.text

  _macros:

    .macro print_char(%s)
      move $a0, %s
      li $v0, 11
      syscall
    .end_macro

    .macro linebreak
      la $a0, '\n'
      li $v0, 11
      syscall
    .end_macro

    .macro exit_ok
      li $v0, 10
      syscall
    .end_macro

    .macro inc(%r)
      addi %r, %r, 1
    .end_macro

    .macro dec(%r)
      addi %r, %r, -1
    .end_macro

  main:

    # strlen_begin
    la $t0, str
    li $t3, 0 # length

    strlen_loop_begin:
      lb $t1, ($t0)
      beq $t1 '\0', strlen_loop_end
      inc($t3)
      inc($t0)
      j strlen_loop_begin
    strlen_loop_end:
    dec($t3) # minus '\0' symbol
    # strlen_end

    li $t0, 0 # int i = 0
    la $t1, str

    loop_begin:
      bgt $t0, $t3, loop_end # while (i < n - 1)

      lb $t2, ($t1) # string is a sequence of bytes, therefore use lb
      print_char($t2)

      bne $t2, ' ', no_line_break
      linebreak()
      no_line_break:

      addi $t0, $t0, 1 # i++
      addi $t1, $t1, 1 # move by sizeof(byte)

      j loop_begin
    loop_end:

    exit_ok()
